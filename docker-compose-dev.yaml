services:
  rabbitmq:
    build:
      context: ./containers/rabbitmq
      dockerfile: Dockerfile
    ports:
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s
    environment:
      - NODE_ID=0
      - RABBITMQ_LOG_LEVELS=error

  health_checker_0:
    container_name: health_checker_0
    build:
      context: ./containers/
      dockerfile: health_checker/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .data/config.ini:/root/config.ini
    environment:
      - ELECTION_ID=0
      - ELECTION_REPLICAS_AMOUNT=3
      - PYTHONUNBUFFERED=1
      - SERVICES=health_checker_0,health_checker_1,health_checker_2,request_listener,all_countries_agg_0,all_countries_agg_1,all_countries_agg_2,thumbnail_downloader_0,thumbnail_downloader_1,thumbnail_downloader_2,max_day_filter_0,max_day_filter_1,max_day_filter_2,max_day_agg_0,max_day_agg_1,max_day_agg_2,tag_filter_0,tag_filter_1,tag_filter_2,likes_filter_0,likes_filter_1,likes_filter_2,duplicates_filter_0,duplicates_filter_1,duplicates_filter_2
      - RETRIES=3

  health_checker_1:
    container_name: health_checker_1
    build:
      context: ./containers/
      dockerfile: health_checker/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .data/config.ini:/root/config.ini
    environment:
      - ELECTION_ID=1
      - ELECTION_REPLICAS_AMOUNT=3
      - PYTHONUNBUFFERED=1
      - SERVICES=health_checker_0,health_checker_1,health_checker_2,request_listener,all_countries_agg_0,all_countries_agg_1,all_countries_agg_2,thumbnail_downloader_0,thumbnail_downloader_1,thumbnail_downloader_2,max_day_filter_0,max_day_filter_1,max_day_filter_2,max_day_agg_0,max_day_agg_1,max_day_agg_2,tag_filter_0,tag_filter_1,tag_filter_2,likes_filter_0,likes_filter_1,likes_filter_2,duplicates_filter_0,duplicates_filter_1,duplicates_filter_2
      - RETRIES=3

  health_checker_2:
    container_name: health_checker_2
    build:
      context: ./containers/
      dockerfile: health_checker/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .data/config.ini:/root/config.ini
    environment:
      - ELECTION_ID=2
      - ELECTION_REPLICAS_AMOUNT=3
      - PYTHONUNBUFFERED=1
      - SERVICES=health_checker_0,health_checker_1,health_checker_2,request_listener,all_countries_agg_0,all_countries_agg_1,all_countries_agg_2,thumbnail_downloader_0,thumbnail_downloader_1,thumbnail_downloader_2,max_day_filter_0,max_day_filter_1,max_day_filter_2,max_day_agg_0,max_day_agg_1,max_day_agg_2,tag_filter_0,tag_filter_1,tag_filter_2,likes_filter_0,likes_filter_1,likes_filter_2,duplicates_filter_0,duplicates_filter_1,duplicates_filter_2
      - RETRIES=3

  client_0:
    container_name: client_0
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=0
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
      - SLEEP_TIME=0
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    # restart: on-failure

  client_1:
    container_name: client_1
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=1
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
      - SLEEP_TIME=0
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    # restart: on-failure


  client_2:
    container_name: client_2
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=2
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
      - SLEEP_TIME=0
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    # restart: on-failure

  client_3:
    container_name: client_3
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=3
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
      - SLEEP_TIME=0
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    # restart: on-failure

  client_4:
    container_name: client_4
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=4
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
      - SLEEP_TIME=0
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    # restart: on-failure

  client_5:
    container_name: client_5
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=5
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
      - SLEEP_TIME=0
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    # restart: on-failure

  client_6:
    container_name: client_6
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=6
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
      - SLEEP_TIME=60
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    # restart: on-failure


  client_7:
    container_name: client_7
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=7
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
      - SLEEP_TIME=60
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    # restart: on-failure

  client_8:
    container_name: client_8
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=8
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
      - SLEEP_TIME=60
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    # restart: on-failure


  client_9:
    container_name: client_9
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=9
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
      - SLEEP_TIME=60
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    # restart: on-failure

  request_listener:
    container_name: request_listener
    build:
      context: ./containers/
      dockerfile: request_listener/Dockerfile
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1
    expose:
      - "25555"
    depends_on:
      - all_countries_agg_0
      - all_countries_agg_1
      - all_countries_agg_2
      - likes_filter_0
      - likes_filter_1
      - likes_filter_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/request_listener:/root/storage

  all_countries_agg_0:
    container_name: all_countries_agg_0
    build:
      context: ./containers/
      dockerfile: all_countries_agg/Dockerfile
    # restart: on-failure
    depends_on:
      - thumbnail_downloader_0
      - thumbnail_downloader_1
      - thumbnail_downloader_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/all_countries_agg/all_countries_agg_0:/root/storage
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  all_countries_agg_1:
    container_name: all_countries_agg_1
    build:
      context: ./containers/
      dockerfile: all_countries_agg/Dockerfile
    # restart: on-failure
    depends_on:
      - thumbnail_downloader_0
      - thumbnail_downloader_1
      - thumbnail_downloader_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/all_countries_agg/all_countries_agg_1:/root/storage
    environment:
      - NODE_ID=1
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  all_countries_agg_2:
    container_name: all_countries_agg_2
    build:
      context: ./containers/
      dockerfile: all_countries_agg/Dockerfile
    # restart: on-failure
    depends_on:
      - thumbnail_downloader_0
      - thumbnail_downloader_1
      - thumbnail_downloader_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/all_countries_agg/all_countries_agg_2:/root/storage
    environment:
      - NODE_ID=2
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1


  thumbnail_downloader_0:
    container_name: thumbnail_downloader_0
    build:
      context: ./containers/
      dockerfile: thumbnail_downloader/Dockerfile
    # restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/thumbnail_downloader/thumbnail_downloader_0:/root/storage
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  thumbnail_downloader_1:
    container_name: thumbnail_downloader_1
    build:
      context: ./containers/
      dockerfile: thumbnail_downloader/Dockerfile
    # restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/thumbnail_downloader/thumbnail_downloader_1:/root/storage
    environment:
      - NODE_ID=1
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  thumbnail_downloader_2:
    container_name: thumbnail_downloader_2
    build:
      context: ./containers/
      dockerfile: thumbnail_downloader/Dockerfile
    # restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/thumbnail_downloader/thumbnail_downloader_2:/root/storage
    environment:
      - NODE_ID=2
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  max_day_filter_0:
    container_name: max_day_filter_0
    build:
      context: ./containers/
      dockerfile: max_day_filter/Dockerfile
    # restart: on-failure
    depends_on:
      - max_day_agg_0
      - max_day_agg_1
      - max_day_agg_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/max_day_filter/max_day_filter_0:/root/storage
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  max_day_filter_1:
    container_name: max_day_filter_1
    build:
      context: ./containers/
      dockerfile: max_day_filter/Dockerfile
    # restart: on-failure
    depends_on:
      - max_day_agg_0
      - max_day_agg_1
      - max_day_agg_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/max_day_filter/max_day_filter_1:/root/storage
    environment:
      - NODE_ID=1
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  max_day_filter_2:
    container_name: max_day_filter_2
    build:
      context: ./containers/
      dockerfile: max_day_filter/Dockerfile
    # restart: on-failure
    depends_on:
      - max_day_agg_0
      - max_day_agg_1
      - max_day_agg_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/max_day_filter/max_day_filter_2:/root/storage
    environment:
      - NODE_ID=2
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1


  max_day_agg_0:
    container_name: max_day_agg_0
    build:
      context: ./containers/
      dockerfile: max_day_agg/Dockerfile
    # restart: on-failure
    depends_on:
      rabbitmq:
         condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/max_day_agg/max_day_agg_0:/root/storage
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  max_day_agg_1:
    container_name: max_day_agg_1
    build:
      context: ./containers/
      dockerfile: max_day_agg/Dockerfile
    # restart: on-failure
    depends_on:
      rabbitmq:
         condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/max_day_agg/max_day_agg_1:/root/storage
    environment:
      - NODE_ID=1
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  max_day_agg_2:
    container_name: max_day_agg_2
    build:
      context: ./containers/
      dockerfile: max_day_agg/Dockerfile
    # restart: on-failure
    depends_on:
      rabbitmq:
         condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/max_day_agg/max_day_agg_1:/root/storage
    environment:
      - NODE_ID=2
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  tag_filter_0:
    container_name: tag_filter_0
    build:
      context: ./containers/
      dockerfile: tag_filter/Dockerfile
    # restart: on-failure
    depends_on:
      - duplicates_filter_0
      - duplicates_filter_1
      - duplicates_filter_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/tag_filter/tag_filter_0:/root/storage
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  tag_filter_1:
    container_name: tag_filter_1
    build:
      context: ./containers/
      dockerfile: tag_filter/Dockerfile
    # restart: on-failure
    depends_on:
      - duplicates_filter_0
      - duplicates_filter_1
      - duplicates_filter_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/tag_filter/tag_filter_1:/root/storage
    environment:
      - NODE_ID=1
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  tag_filter_2:
    container_name: tag_filter_2
    build:
      context: ./containers/
      dockerfile: tag_filter/Dockerfile
    # restart: on-failure
    depends_on:
      - duplicates_filter_0
      - duplicates_filter_1
      - duplicates_filter_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/tag_filter/tag_filter_2:/root/storage
    environment:
      - NODE_ID=2
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  likes_filter_0:
    container_name: likes_filter_0
    build:
      context: ./containers/
      dockerfile: likes_filter/Dockerfile
    # restart: on-failure
    depends_on:
      - tag_filter_0
      - tag_filter_1
      - tag_filter_2
      - max_day_filter_0
      - max_day_filter_1
      - max_day_filter_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/likes_filter/likes_filter_0:/root/storage
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  likes_filter_1:
    container_name: likes_filter_1
    build:
      context: ./containers/
      dockerfile: likes_filter/Dockerfile
    # restart: on-failure
    depends_on:
      - tag_filter_0
      - tag_filter_1
      - tag_filter_2
      - max_day_filter_0
      - max_day_filter_1
      - max_day_filter_2
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/likes_filter/likes_filter_1:/root/storage
    environment:
      - NODE_ID=1
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  likes_filter_2:
    container_name: likes_filter_2
    build:
      context: ./containers/
      dockerfile: likes_filter/Dockerfile
    # restart: on-failure
    depends_on:
      - tag_filter_0
      - tag_filter_1
      - tag_filter_2
      - max_day_filter_0
      - max_day_filter_1
      - max_day_filter_2      
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/likes_filter/likes_filter_2:/root/storage
    environment:
      - NODE_ID=2
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1


  duplicates_filter_0:
    container_name: duplicates_filter_0
    build:
      context: ./containers/
      dockerfile: duplicates_filter/Dockerfile
    # restart: on-failure
    depends_on:
      rabbitmq:
         condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/duplicates_filter/duplicates_filter_0:/root/storage
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  duplicates_filter_1:
    container_name: duplicates_filter_1
    build:
      context: ./containers/
      dockerfile: duplicates_filter/Dockerfile
    # restart: on-failure
    depends_on:
      rabbitmq:
         condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/duplicates_filter/duplicates_filter_1/:/root/storage/
    environment:
      - NODE_ID=1
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1

  duplicates_filter_2:
    container_name: duplicates_filter_2
    build:
      context: ./containers/
      dockerfile: duplicates_filter/Dockerfile
    # restart: on-failure
    depends_on:
      rabbitmq:
         condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini
      - .data/volumes/duplicates_filter/duplicates_filter_2:/root/storage
    environment:
      - NODE_ID=2
      - PYTHONUNBUFFERED=1
      - IS_POISONED=false
      # - COPIES=1
