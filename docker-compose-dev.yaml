services:
  rabbitmq:
    build:
      context: ./containers/rabbitmq
      dockerfile: Dockerfile
    ports:
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s
    environment:
      - NODE_ID=0
      - RABBITMQ_LOG_LEVELS=error

  client:
    container_name: client
    build:
      context: ./containers/
      dockerfile: client/Dockerfile
    environment:
      - NODE_ID=0
      - SERVER_PORT=25555
      - SERVER_HOST=request_listener
      - PYTHONUNBUFFERED=1
    volumes:
      - .data/output:/output
      - .data/datasets:/datasets
      - .data/config.ini:/root/config.ini
    depends_on:
      - request_listener
    links:
      - request_listener
    restart: on-failure

  request_listener:
    container_name: request_listener
    build:
      context: ./containers/
      dockerfile: request_listener/Dockerfile
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - COPIES=1
    expose:
      - "25555"
    depends_on:
      rabbitmq:
         condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini

  all_countries_agg:
    build:
      context: ./containers/
      dockerfile: all_countries_agg/Dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
         condition: service_healthy
    volumes:
      - .data/id_country_files:/id_country_files
      - .data/config.ini:/root/config.ini
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - COPIES=1

  thumbnail_downloader:
    build:
      context: ./containers/
      dockerfile: thumbnail_downloader/Dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .data/config.ini:/root/config.ini
    environment:
      - NODE_ID=0
      - PYTHONUNBUFFERED=1
      - COPIES=1

  # max_day_filter:
  #   build:
  #     context: ./containers/
  #     dockerfile: max_day_filter/Dockerfile
  #   restart: on-failure
  #   depends_on:
  #     rabbitmq:
  #        condition: service_healthy
  #   volumes:
  #     - .data/config.ini:/root/config.ini
  #     - .data/date_files:/date_files
  #   environment:
  #     - NODE_ID=0
  #     - PYTHONUNBUFFERED=1
  #     - COPIES=1

  # max_day_agg:
  #   build:
  #     context: ./containers/
  #     dockerfile: max_day_agg/Dockerfile
  #   restart: on-failure
  #   depends_on:
  #     rabbitmq:
  #        condition: service_healthy
  #   volumes:
  #     - .data/config.ini:/root/config.ini
  #   environment:
  #     - NODE_ID=0
  #     - PYTHONUNBUFFERED=1
  #     - COPIES=1

  # tag_filter:
  #   container_name: tag_filter
  #   build:
  #     context: ./containers/
  #     dockerfile: tag_filter/Dockerfile
  #   restart: on-failure
  #   depends_on:
  #     rabbitmq:
  #        condition: service_healthy
  #   volumes:
  #     - .data/config.ini:/root/config.ini
  #   environment:
  #     - NODE_ID=0
  #     - PYTHONUNBUFFERED=1
  #     - COPIES=1
  
  # duplicates_filter:
  #   build:
  #     context: ./containers/
  #     dockerfile: duplicates_filter/Dockerfile
  #   restart: on-failure
  #   depends_on:
  #     rabbitmq:
  #        condition: service_healthy
  #   volumes:
  #     - .data/config.ini:/root/config.ini
  #     - .data/id_duplicate_files:/id_duplicate_files
  #   environment:
  #     - NODE_ID=0
  #     - COPIES=1
